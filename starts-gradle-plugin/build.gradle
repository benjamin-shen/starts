plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '1.0.0-rc-1'
}

project.description = 'STARTS Gradle Plugin'
project.group = 'edu.illinois'
project.version = '1.4-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation gradleApi()
    implementation 'edu.illinois:yasgl:1.2'
    implementation 'edu.illinois:starts-core:' + project.version
    implementation 'edu.illinois:starts-plugin-util:' + project.version
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

pluginBundle {
    website = 'https://github.com/TestingResearchIllinois/starts'
    vcsUrl = 'https://github.com/TestingResearchIllinois/starts'
    tags = ['starts', 'regression', 'test']
}

gradlePlugin {
    plugins {
        starts {
            id = 'edu.illinois.starts'
            displayName = 'STARTS plugin for Gradle'
            description = 'STARTS plugin for Gradle'
            implementationClass = 'edu.illinois.starts.plugin.gradle.StartsPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use JUnit Jupiter for unit tests.
    useJUnitPlatform()
}

publishing {
    publications {
        pluginPublication(MavenPublication) {
            from components.java
            groupId project.group
            artifactId "starts-gradle-plugin"
            version project.version
        }
    }
}
